;; Auto-generated. Do not edit!


(when (boundp 'tf2_msgs::LookupTransformGoal)
  (if (not (find-package "TF2_MSGS"))
    (make-package "TF2_MSGS"))
  (shadow 'LookupTransformGoal (find-package "TF2_MSGS")))
(unless (find-package "TF2_MSGS::LOOKUPTRANSFORMGOAL")
  (make-package "TF2_MSGS::LOOKUPTRANSFORMGOAL"))

(in-package "ROS")
;;//! \htmlinclude LookupTransformGoal.msg.html


(defclass tf2_msgs::LookupTransformGoal
  :super ros::object
  :slots (_target_frame _source_frame _source_time _timeout _target_time _fixed_frame _advanced ))

(defmethod tf2_msgs::LookupTransformGoal
  (:init
   (&key
    ((:target_frame __target_frame) "")
    ((:source_frame __source_frame) "")
    ((:source_time __source_time) (instance ros::time :init))
    ((:timeout __timeout) (instance ros::time :init))
    ((:target_time __target_time) (instance ros::time :init))
    ((:fixed_frame __fixed_frame) "")
    ((:advanced __advanced) nil)
    )
   (send-super :init)
   (setq _target_frame (string __target_frame))
   (setq _source_frame (string __source_frame))
   (setq _source_time __source_time)
   (setq _timeout __timeout)
   (setq _target_time __target_time)
   (setq _fixed_frame (string __fixed_frame))
   (setq _advanced __advanced)
   self)
  (:target_frame
   (&optional __target_frame)
   (if __target_frame (setq _target_frame __target_frame)) _target_frame)
  (:source_frame
   (&optional __source_frame)
   (if __source_frame (setq _source_frame __source_frame)) _source_frame)
  (:source_time
   (&optional __source_time)
   (if __source_time (setq _source_time __source_time)) _source_time)
  (:timeout
   (&optional __timeout)
   (if __timeout (setq _timeout __timeout)) _timeout)
  (:target_time
   (&optional __target_time)
   (if __target_time (setq _target_time __target_time)) _target_time)
  (:fixed_frame
   (&optional __fixed_frame)
   (if __fixed_frame (setq _fixed_frame __fixed_frame)) _fixed_frame)
  (:advanced
   (&optional __advanced)
   (if __advanced (setq _advanced __advanced)) _advanced)
  (:serialization-length
   ()
   (+
    ;; string _target_frame
    4 (length _target_frame)
    ;; string _source_frame
    4 (length _source_frame)
    ;; time _source_time
    8
    ;; duration _timeout
    8
    ;; time _target_time
    8
    ;; string _fixed_frame
    4 (length _fixed_frame)
    ;; bool _advanced
    1
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; string _target_frame
       (write-long (length _target_frame) s) (princ _target_frame s)
     ;; string _source_frame
       (write-long (length _source_frame) s) (princ _source_frame s)
     ;; time _source_time
       (write-long (send _source_time :sec) s) (write-long (send _source_time :nsec) s)
     ;; duration _timeout
       (write-long (send _timeout :sec) s) (write-long (send _timeout :nsec) s)
     ;; time _target_time
       (write-long (send _target_time :sec) s) (write-long (send _target_time :nsec) s)
     ;; string _fixed_frame
       (write-long (length _fixed_frame) s) (princ _fixed_frame s)
     ;; bool _advanced
       (if _advanced (write-byte -1 s) (write-byte 0 s))
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; string _target_frame
     (let (n) (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4) (setq _target_frame (subseq buf ptr- (+ ptr- n))) (incf ptr- n))
   ;; string _source_frame
     (let (n) (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4) (setq _source_frame (subseq buf ptr- (+ ptr- n))) (incf ptr- n))
   ;; time _source_time
     (send _source_time :sec (sys::peek buf ptr- :integer)) (incf ptr- 4)  (send _source_time :nsec (sys::peek buf ptr- :integer)) (incf ptr- 4)
   ;; duration _timeout
     (send _timeout :sec (sys::peek buf ptr- :integer)) (incf ptr- 4)  (send _timeout :nsec (sys::peek buf ptr- :integer)) (incf ptr- 4)
   ;; time _target_time
     (send _target_time :sec (sys::peek buf ptr- :integer)) (incf ptr- 4)  (send _target_time :nsec (sys::peek buf ptr- :integer)) (incf ptr- 4)
   ;; string _fixed_frame
     (let (n) (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4) (setq _fixed_frame (subseq buf ptr- (+ ptr- n))) (incf ptr- n))
   ;; bool _advanced
     (setq _advanced (not (= 0 (sys::peek buf ptr- :char)))) (incf ptr- 1)
   ;;
   self)
  )

(setf (get tf2_msgs::LookupTransformGoal :md5sum-) "35e3720468131d675a18bb6f3e5f22f8")
(setf (get tf2_msgs::LookupTransformGoal :datatype-) "tf2_msgs/LookupTransformGoal")
(setf (get tf2_msgs::LookupTransformGoal :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
#Simple API
string target_frame
string source_frame
time source_time
duration timeout

#Advanced API
time target_time
string fixed_frame

#Whether or not to use the advanced API
bool advanced


")



(provide :tf2_msgs/LookupTransformGoal "35e3720468131d675a18bb6f3e5f22f8")


